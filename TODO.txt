generalizar bebederos:
* preguntar bebedero seleccionado actual 
* seleccionar esp32 slave correspondiente al bebedero actual
* recibir datos y actualizar bebedero actual

Changes:
* Arduino ---> Chequear funcion calidad del agua --> updatea de forma incorrecta una vez cumplidos los 20 minutos
* Android ---> graficos (para el final)
* Arduino ---> borrar printlns y acomodar checks de wifi activo y bt
* Arduino ---> ver posibilidad de agregar bomba de agua?
* General ---> acomodar parametro del nivel del agua, ya que al usar uint8_t ya no toma valores tan grandes como antes
          |
          ---> le puse 300, aunque dependiendo del bebedero que haga voy a ponerle mas o menos
* Arduino ---> no pedir nada ni enviar a firebase hasta que no se establezca la comunicación por bt. Ver lo que ocurre con los primeros valores, ya que las primeras 
               mediciones siempre devuelven 0, hasta que se reacomoda todo
* Arduino ---> ver la posibilidad de borrar los backups antiguos luego de un cierto tiempo
* Android ---> si se llega al 100% en los progress bar, que se muestre el 100% y no más que eso


Listo:
* Android ---> deshabilitar notificaciones push mientras se esta llenando el bebedero (o esperar 40 segundos para las dos primeras mediciones)
          |
          ---> en realidad, cuando se notifica una vez, ya directamente se desactivan. Cuando se rellena el bebedero, si estaban deshabilitadas se habilitan de nuevo.
               Si cambian los valores de los parametros desde la app, se vuelven a habilitar nuevamente.
* Android ---> tomar backups para calcular promedios desde la fecha en adelante que indique la variable last_fill
          |
          ---> luego de los 20 segundos se toma la primer medición, sino mientras tanto queda en NaN. Conviene medir mientras se va rellenando el bebedero?
               es decir, cuando se empieza a llenar modificar la variable last_filled y empezar a tomar valores de los backups desde ahí
* Android ---> revisar get un 99 (retorno error al leer) en water quality
* Arduino ---> en vez de tomar una nueva fecha para el backup, tomar la fecha que hay en date en current_data y usarla para "backup_xx_xx"